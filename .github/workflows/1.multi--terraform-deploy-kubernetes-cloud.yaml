name: "Terraform - Kubernetes Multi-cloud Lab"

on:
  # push:
  #   branches:
  #     - main

  # schedule:
  #   # Runs at 07:00 AM in every month.
  #   - cron: "0 17 */1 * *"

  # Optional: You can also allow manual runs
  workflow_dispatch:
    inputs:
      # -------------- AZURE --------------

      deploy_azure:
        description: "Azure Deploy ?"
        required: true
        default: false
        type: boolean

      azure_inputsets:
        description: "Choose inputSets for Azure"
        required: true
        default: "Azure_JapanEast_Plan"
        type: choice
        options:
          - Azure_JapanEast_Plan
          - Azure_JapanEast_Apply
          - Azure_JapanEast_Destroy
          - Azure_EastUS2_Plan_Destroy

      # -------------- AWS --------------

      deploy_aws:
        description: "AWS Deploy ?"
        required: true
        default: false
        type: boolean

      aws_inputsets:
        description: "Choose inputSets for AWS"
        required: true
        default: "AWS_us-east-1_Plan"
        type: choice
        options:
          - AWS_us-east-1_Plan
          - AWS_us-east-1_Apply
          - AWS_us-east-1_Destroy
          - AWS_us-west-2_Plan_Destroy

      # -------------- HCP --------------

      deploy_hcp:
        description: "HCP Deploy ?"
        required: true
        default: false
        type: boolean

      hcp_inputsets:
        description: "Choose inputSets for HCP"
        required: true
        default: "HCP_us-east-1_Plan"
        type: choice
        options:
          - HCP_us-east-1_Plan
          - HCP_us-east-1_Apply
          - HCP_us-east-1_Destroy
          - HCP_us-west-2_Plan_Destroy

env:
  Dummy_Env: "This is dummy env"

jobs:
  multi-cloud-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: AZURE - Read JSON input set
        if: ${{ github.event.inputs.deploy_azure == 'true' }}
        id: inputset
        run: |
          content=$(jq -c . .github/inputsets/terraform--lab-cloud-k8s/Azure_JapanEast_Plan.json | jq -R .)
          echo "json=$content" >> $GITHUB_OUTPUT

      - name: Debug
        run: |
          echo "Input JSON"
          echo "${{ steps.inputset.outputs.json }}"
          echo "----"
          echo "{\"ref\":\"main\",\"inputs\":${{ steps.inputset.outputs.json }}}"
          echo "----"
          echo "${{ github.repository }}"

      - name: Get workflow ID by name
        id: get_workflow_id
        run: |
          echo "Fetching all workflows..."
          curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_GITHUB }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows \
            > workflows.json

          if [ ! -s workflows.json ]; then
            echo "Error: workflows.json is empty. API call failed."
            cat workflows.json
            exit 1
          fi

          WORKFLOW_ID=$(jq -r '.workflows[] | select(.name == "Terraform - Deploy Kubernetes Single Cloud") | .id' workflows.json)

          if [ -z "$WORKFLOW_ID" ]; then
            echo "Error: Workflow ID not found."
            exit 1
          fi

          echo "workflow_id=$WORKFLOW_ID" >> $GITHUB_OUTPUT
          echo "Found workflow ID: $WORKFLOW_ID"
          echo "----"
          echo "${{ steps.inputset.outputs.json }}"

      - name: AZURE - Trigger deploy workflow
        if: ${{ github.event.inputs.deploy_azure == 'true' }}
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT_GITHUB }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ steps.get_workflow_id.outputs.workflow_id }}/dispatches \
          -d @- <<EOF
            {
              "ref": "main",
              "inputs": ${{ fromJson(steps.inputset.outputs.json) }}
            }
          EOF
