name: "Terraform - Deploy Kubernetes Single Cloud"

on:
  # push:
  #   branches:
  #     - main

  # schedule:
  #   # Runs at 07:00 AM in every month.
  #   - cron: "0 17 */1 * *"
  repository_dispatch:
    types: [terraform_deploy_kubernetes_single_cloud]

  # Optional: You can also allow manual runs
  workflow_dispatch:
    inputs:
      deploy_kubernetes:
        description: "Deploy Kubernetes Components"
        required: false
        default: true
        type: boolean
      cloud_provider:
        description: "Choose Cloud Provider"
        required: false
        default: "azure"
        type: choice
        options:
          - azure
          - aws
          - gcp
          - hcp
          - kubenetes
      region_aws:
        description: "Choose Region for EKS"
        required: false
        default: "us-east-1"
        type: choice
        options:
          - us-east-1
          - us-west-2
          - ap-east-1

      region_azure:
        description: "Choose Region for AKS"
        required: false
        default: "Japan West"
        type: choice
        options:
          - East US
          - West US 2
          - Japan West
      region_hcp:
        description: "Choose Region for HCP"
        required: false
        default: "us-east-1"
        type: choice
        options:
          - us-east-1
          - us-west-2
          - ap-east-1
      region_kubenetes:
        description: "Choose Region for Kubernetes"
        required: false
        default: "Japan West"
        type: choice
        options:
          - East US
          - West US 2
          - Japan West
          - us-east-1
          - us-west-2
          - ap-east-1
      environment:
        description: "Choose Environment"
        required: false
        default: "dev"
        type: choice
        options:
          - dev
          - prod
          - stg
      terraform_action:
        description: "Choose Terraform Action"
        required: false
        default: "apply"
        type: choice
        options:
          - plan
          - apply
          - plan-destroy
          - destroy

env:
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
  HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
  REGION: ${{ github.event.inputs.cloud_provider == 'aws' && github.event.inputs.region_aws || github.event.inputs.cloud_provider == 'azure' && github.event.inputs.region_azure || github.event.inputs.cloud_provider == 'hcp' && github.event.inputs.region_hcp || github.event.inputs.cloud_provider == 'kubenetes' && github.event.inputs.region_kubenetes }}

jobs:
  verify-configuration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Secret
        run: |
          echo "ARM_TENANT_ID: ${ARM_TENANT_ID:0:4}****"
          echo "ARM_SUBSCRIPTION_ID: ${ARM_SUBSCRIPTION_ID:0:4}****"
          echo "ARM_CLIENT_ID: ${ARM_CLIENT_ID:0:4}****"
          echo "ARM_CLIENT_SECRET: ${ARM_CLIENT_SECRET:0:4}****"
          echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:0:4}****"
          echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:4}****"
          echo "HCP_CLIENT_ID: ${HCP_CLIENT_ID:0:4}****"
          echo "HCP_CLIENT_SECRET: ${HCP_CLIENT_SECRET:0:4}****"

      - name: Verify Input
        run: |
          echo "Deploy Kubernetes: ${{ github.event.inputs.deploy_kubernetes }}"
          echo "Cloud Provider: ${{ github.event.inputs.cloud_provider }}"
          echo "Region: $REGION"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Terraform Action: ${{ github.event.inputs.terraform_action }}"

  cloud-k8s-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Install AWS CLI
        run: |
          curl -sS https://raw.githubusercontent.com/khangtictoc/Productive-Workspace-Set-Up/refs/heads/main/linux/installation/developer-packages/ubuntu/tools/aws_cli.sh | sh

      - name: Install Terraform
        run: |
          curl -sS https://raw.githubusercontent.com/khangtictoc/Productive-Workspace-Set-Up/refs/heads/main/linux/installation/developer-packages/ubuntu/tools/terraform.sh | sh

      - name: Install Terragrunt CLI
        run: |
          curl -sS https://raw.githubusercontent.com/khangtictoc/Productive-Workspace-Set-Up/refs/heads/main/linux/installation/developer-packages/ubuntu/tools/terragrunt.sh | sh

      - name: Check Out Terragrunt Project
        run: |
          git clone --depth 1 https://github.com/khangtictoc/Terragrunt_Project_Structure_Design.git

      - name: Terragrunt Plan
        if: ${{ (github.event.inputs.terraform_action == 'plan') && (github.event.inputs.deploy_kubernetes == false) }}
        run: |
          cd "Terragrunt_Project_Structure_Design/environment/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION"
          terragrunt run-all plan --non-interactive \
            --queue-include-external \
            --working-dir .

      - name: Terragrunt Apply (Auto Approve)
        if: ${{ (github.event.inputs.terraform_action == 'apply') && (github.event.inputs.deploy_kubernetes == false) }}
        run: |
          cd "Terragrunt_Project_Structure_Design/environment/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION"
          terragrunt run-all apply --non-interactive \
            --queue-include-external \
            --working-dir .

      - name: Terragrunt Destroy (Auto Approve)
        if: ${{ github.event.inputs.terraform_action == 'destroy' && (github.event.inputs.deploy_kubernetes == false) }}
        run: |
          cd "Terragrunt_Project_Structure_Design/environment/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION"
          terragrunt run-all destroy --non-interactive \
            --queue-include-external \
            --working-dir .

      - name: Terragrunt Plan Destroy
        if: ${{ github.event.inputs.terraform_action == 'plan-destroy' && (github.event.inputs.deploy_kubernetes == false) }}
        run: |
          cd "Terragrunt_Project_Structure_Design/environment/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION"
          terragrunt run-all plan --destroy --non-interactive \
            --queue-include-external \
            --working-dir .
      - name: Kubernetes Components - Terragrunt Plan
        if: (github.event.inputs.terraform_action == 'plan') && (github.event.inputs.deploy_kubernetes == true)
        run: |
          cd "Terragrunt_Project_Structure_Design/environment/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION"
          terragrunt run-all plan --non-interactive \
            --queue-include-external \
            --working-dir .

      - name: Kubernetes Components - Terragrunt Apply (Auto Approve)
        if: ${{ (github.event.inputs.terraform_action == 'apply') && (github.event.inputs.deploy_kubernetes == true) }}
        run: |
          cd "Terragrunt_Project_Structure_Design/environment/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION"
          terragrunt run-all apply --non-interactive \
            --queue-include-external \
            --working-dir .

      - name: Kubernetes Components - Terragrunt Destroy (Auto Approve)
        if: ${{ github.event.inputs.terraform_action == 'destroy' && (github.event.inputs.deploy_kubernetes == true) }}
        run: |
          cd "Terragrunt_Project_Structure_Design/environment/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION"
          terragrunt run-all destroy --non-interactive \
            --queue-include-external \
            --working-dir .

      - name: Kubernetes Components - Terragrunt Plan Destroy
        if: ${{ github.event.inputs.terraform_action == 'plan-destroy' && (github.event.inputs.deploy_kubernetes == true) }}
        run: |
          cd "Terragrunt_Project_Structure_Design/environment/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION"
          terragrunt run-all plan --destroy --non-interactive \
            --queue-include-external \
            --working-dir .
