name: "Kubernetes - OSS Installation"

on:
  # push:
  #   branches:
  #     - main

  # schedule:
  #   # Runs at 07:00 AM in every month.
  #   - cron: "0 17 */1 * *"

  # Optional: You can also allow manual runs
  workflow_dispatch:
    inputs:
      cloud_provider:
        description: "Choose Cloud Provider"
        required: false
        default: "azure"
        type: choice
        options:
          - azure
          - aws
          - gcp
          - hcp
      region_aws:
        description: "Choose Region for EKS"
        required: false
        default: "us-east-1"
        type: choice
        options:
          - us-east-1
          - us-west-2
          - ap-east-1

      region_azure:
        description: "Choose Region for AKS"
        required: false
        default: "Japan West"
        type: choice
        options:
          - East US
          - West US 2
          - Japan West
      region_hcp:
        description: "Choose Region for HCP"
        required: false
        default: "us-east-1"
        type: choice
        options:
          - us-east-1
          - us-west-2
          - ap-east-1
      environment:
        description: "Choose Environment"
        required: false
        default: "dev"
        type: choice
        options:
          - dev
          - prod
          - stg
      kubectl_action:
        description: "Choose Kubectl action"
        required: true
        default: "apply"
        type: choice
        options:
          - dry_run
          - apply
          - delete

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  REGION: ${{ github.event.inputs.cloud_provider == 'aws' && github.event.inputs.region_aws || github.event.inputs.cloud_provider == 'azure' && github.event.inputs.region_azure || github.event.inputs.cloud_provider == 'hcp' && github.event.inputs.region_hcp }}

jobs:
  verify-configuration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Secret
        run: |
          echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:0:4}****"
          echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:4}****"

      - name: Verify Input
        run: |
          echo "Cloud Provider: ${{ github.event.inputs.cloud_provider }}"
          echo "Region: $REGION"
          echo "Environment: ${{ github.event.inputs.environment }}"

  k8s-oss-install:
    runs-on: ubuntu-latest

    steps:
      - name: Install Kubectl
        run: |
          curl -sS https://raw.githubusercontent.com/khangtictoc/Productive-Workspace-Set-Up/refs/heads/main/linux/installation/developer-packages/ubuntu/tools/kubectl.sh | sh

      - name: Set up Cluster Access Credentials
        run: |
          aws s3 cp "s3://terragrunt-output/${{ github.event.inputs.environment }}/${{ github.event.inputs.cloud_provider }}/$REGION/kubeconfig" ~/.kube/config

      - name: Clone OSS Repository
        run: |
          git clone https://github.com/khangtictoc/ArgoCD-Apps.git "OSS"

      - name: "[CLI] Install ArgoCD"
        run: |
          curl -sS https://raw.githubusercontent.com/khangtictoc/Productive-Workspace-Set-Up/refs/heads/main/linux/installation/developer-packages/ubuntu/tools/argocd_cli.sh | sh

      - name: "[K8S] Install ArgoCD"
        working-directory: OSS/helm/argocd
        run: |
          chmod +x install.sh
          ./install.sh

      - name: "[K8S] Configure 'default' Argo Project"
        working-directory: OSS/helm/argocd
        run: |
          kubectl apply -f manifest/default.appproject.yaml

      - name: "[Pre-requisite] Create Namespace"
        run: |
          kubectl apply -f https://raw.githubusercontent.com/khangtictoc/ArgoCD-Apps/refs/heads/main/manifest/namespace/cluster-aio.yaml

      - name: "[K8S] [APPLY] Install NGINX Ingress Controller"
        if: contains(github.event.inputs.kubectl_action, 'apply')
        working-directory: OSS/argocd_apps/nginx
        run: |
          kubectl apply -f applications.yaml

      - name: "[K8S] [DRY-RUN] Install NGINX Ingress Controller"
        if: contains(github.event.inputs.kubectl_action, 'dry_run')
        working-directory: OSS/argocd_apps/nginx
        run: |
          kubectl apply -f applications.yaml --dry-run=server
          sleep 5

      - name: "[K8S] [DIFF] Install NGINX Ingress Controller"
        if: contains(github.event.inputs.kubectl_action, 'dry_run')
        working-directory: OSS/argocd_apps/nginx
        run: |
          kubectl diff -f applications.yaml
          sleep 5

      - name: "[K8S] Install Ingress from AppGW to Nginx"
        working-directory: OSS/argocd_apps/nginx
        run: |
          kubectl apply -f ingress-appgw-to-nginx.yaml

      - name: "[K8S] [APPLY] Install JENKINS"
        if: contains(github.event.inputs.kubectl_action, 'apply')
        working-directory: OSS/argocd_apps/jenkins
        run: |
          kubectl apply -f applications.yaml

      - name: "[K8S] [DRY-RUN] Install JENKINS"
        if: contains(github.event.inputs.kubectl_action, 'dry_run')
        working-directory: OSS/argocd_apps/jenkins
        run: |
          kubectl apply -f applications.yaml --dry-run=server

      - name: "[K8S] [DIFF] Install JENKINS"
        if: contains(github.event.inputs.kubectl_action, 'dry_run')
        working-directory: OSS/argocd_apps/jenkins
        run: |
          kubectl diff -f applications.yaml

      - name: "[K8S] [APPLY] Install CERT-MANAGER"
        if: contains(github.event.inputs.kubectl_action, 'apply')
        working-directory: OSS/argocd_apps/cert-manager
        run: |
          kubectl apply -f applications.yaml

      - name: "[K8S] [DRY-RUN] Install CERT-MANAGER"
        if: contains(github.event.inputs.kubectl_action, 'dry_run')
        working-directory: OSS/argocd_apps/cert-manager
        run: |
          kubectl apply -f applications.yaml --dry-run=server

      - name: "[K8S] [DIFF] Install CERT-MANAGER"
        if: contains(github.event.inputs.kubectl_action, 'dry_run')
        working-directory: OSS/argocd_apps/cert-manager
        run: |
          kubectl diff -f applications.yaml
